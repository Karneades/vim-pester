" ps1pester {{{1
let g:template['ps1pester'] = {}
let g:template['ps1pester']['describe'] = "Describe '".g:rs."...".g:re."' {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['context'] = "Context '".g:rs."...".g:re."' {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['it'] = "It '".g:rs."...".g:re."' {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['shouldbe'] = "".g:rs."...".g:re." | Should Be ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbeexactly'] = "".g:rs."...".g:re." | Should BeExactly ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbelike'] = "".g:rs."...".g:re." | Should Be Like ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbelikeExactly'] = "".g:rs."...".g:re." | Should Be LikeExactly ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbegreater'] = "".g:rs."...".g:re." | Should BeGreaterThan ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbeless'] = "".g:rs."...".g:re." | Should BeLessThan ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbenull'] = "".g:rs."...".g:re." | Should BeNullOrEmpty ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldcontain'] = "".g:rs."...".g:re." | Should Contain ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldcontainexactly'] = "".g:rs."...".g:re." | Should ContainExactly ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldexist'] = "".g:rs."...".g:re." | Should Exist ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldmatch'] = "".g:rs."...".g:re." | Should Match ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldmatchexactly'] = "".g:rs."...".g:re." | Should MatchExactly ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldnotbe'] = "".g:rs."...".g:re." | Should Not Be ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldnotcontain'] = "".g:rs."...".g:re." | Should Not Contain ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldnotexist'] = "".g:rs."...".g:re." | Should Not Exist ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldnotmatch'] = "".g:rs."...".g:re." | Should Not Match ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldthrow'] = "".g:rs."...".g:re." | Should Throw ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldnotthrow'] = "".g:rs."...".g:re." | Should Not Throw ".g:rs."...".g:re.""
let g:template['ps1pester']['shouldbeoftype'] = "".g:rs."...".g:re." | Should BeOfType ".g:rs."...".g:re.""
let g:template['ps1pester']['beforeeach'] = "BeforeEach {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['aftereach'] = "AfterEach {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['beforeall'] = "BeforeAll {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['afterall'] = "AfterAll {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['mock'] = "Mock '".g:rs."...".g:re."' {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['newmockobject'] = "New-MockObject ".g:rs."...".g:re.""
let g:template['ps1pester']['assertmockcalled'] = "Assert-MockCalled ".g:rs."...".g:re.""
let g:template['ps1pester']['inmodulescope'] = "InModuleScope ".g:rs."...".g:re." {\<CR>".g:rs."...".g:re."\<cr>}"
let g:template['ps1pester']['settestinconclusive'] = "Set-TestInconclusive ".g:rs."...".g:re.""

" }}}
